@model Statistics.Models.SaleViewModel

@{
    ViewBag.Title = "Create new sale";
}


@{ 
    AjaxOptions opt = new AjaxOptions()
    {
        HttpMethod = "POST",
        UpdateTargetId = "newSale"//,
        //Url = Url.Action("CreateSale")
    };
}

@using (@Ajax.BeginForm(opt)) 
{    
    
    <div class="form-horizontal">
        <h4>Create sale</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SaleDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaleDate, new { htmlAttributes = new { @class = "form-control datefield" } })
                @Html.ValidationMessageFor(model => model.SaleDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", "Home", new { @class = "btn btn-default" })*@
                <button id="bSave" type="submit" name="submit" value="Save" class="btn btn-default">Create</button>
                <button id="bCancel" type="submit" name="submit" value="Cancel" class="btn btn-default">Cancel</button>                 
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back", "Index")
</div>*@
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^[0-9]+([\,\.]{1}[0-9]+)??$/.test(value);
        }

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || moment(value, "DD.MM.YYYY", true).isValid();
        };
</script>

<script type="text/javascript">
    $(document).ready(function () {
        var id = parseInt(@ViewBag.CreatedId);
        
        if (!isNaN(id)) {
            appendSaleToTable(id);
        }

        $(bCancel).click(function (o) {
            o.preventDefault();
            $("#newSale").html("");
        });
    })
</script>