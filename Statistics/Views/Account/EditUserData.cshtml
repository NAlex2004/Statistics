@model Statistics.Models.UserViewModel

@if (Model != null)
{
    AjaxOptions opt = new AjaxOptions()
    {
        Url = Url.Action("EditUserData"),
        HttpMethod = "POST",
        UpdateTargetId = Model.Id
    };

    
    using (Ajax.BeginForm(opt))
    {
        @Html.HiddenFor(m => m.Id)        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Roles for @Model.UserName:</label>
            <div class="col-md-10">                
                <a id="aRoles_@Model.Id" href="@Url.Action("UserRoles", new { id = Model.Id })" class="btn btn-primary">Roles</a>                
            </div>
        </div>
        <div id="rolesDialog_@Model.Id"></div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="bSave_@Model.Id" type="submit" name="submit" value="Save" class="btn btn-default">Save</button>
                <button id="bCancel_@Model.Id" type="submit" name="submit" value="Cancel" class="btn">Cancel</button>
            </div>
        </div>
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#bCancel_@Model.Id").click(function (o) {
            o.preventDefault();             
            $("#@Model.Id").load("OneUserById/@Model.Id");
        })           
        
        $.validator.unobtrusive.parse("#@Model.Id")
    })
    
</script>
