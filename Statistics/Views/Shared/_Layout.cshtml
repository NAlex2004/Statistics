@using Statistics.Identity

<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Statistics", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">                    
                    @if (User.Identity.IsAuthenticated)
                    {                        
                        if (AccountManager.IsAdmin(Request.GetOwinContext(), User.Identity.Name))
                        {
                            <li>@Html.ActionLink("Users", "Users", "Account"))</li>
                        }
                        <li>@Html.ActionLink("Change password", "ChangePassword", "Account", new { returnUrl = Request.Url.AbsoluteUri }, null)</li>
                        <li>@Html.ActionLink(string.Format("Logout ({0})", User.Identity.Name), "Logout", "Account")</li>
                    }                    
                </ul>                
            </div>
            
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />        
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/unobtrusive")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^[0-9]+([\,\.]{1}[0-9]+)??$/.test(value);
        }

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || moment(value, "DD.MM.YYYY", true).isValid();
        };
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
